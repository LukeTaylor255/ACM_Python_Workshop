from flask import Flask, send_from_directory, render_template, session, request, redirect
app = Flask(__name__)


@app.route("/static/<path:path>")  # Static files like JS and CSS are mapped to the /static directory
def static_file(path):
    return send_from_directory("static", path)


@app.route("/")
@app.route("/index")
@app.route("/index.html")
def index():  # Makes a function that will return html based on routes for index.html
    if('username' in session):  # Check if a session with the user exists
        return render_template("index.html", user=session["username"])  # Use the username in the session
    return render_template("index.html", user=None)  # Tell the template that there is no username


@app.route("/login", methods=["GET", "POST"])  # Maps the login page to both GET and POST requests
def login():
    error = None  # assume no error
    success = None  # assume no success
    if(request.method == "POST"):
        if(request.form["pw"] == "mypassword"):  # Check that the PW matches the form input - warning: not most secure implementation
            session["username"] = request.form["un"]  # Get the input with name "un" from the form data
            success = "You are now logged in."  # Set success to true
        else:
            error = "Invalid password"  # Any password that doesn't match will return an error
    return render_template("login.html", error=error, success=success)


@app.route("/logout")  # Allow the user to clear their session state
def logout():
    session.pop("username", None)
    return redirect("/")


@app.errorhandler(404)  # Return an error page when the requested page is not found.
def notfound(error):
    return render_template("notfound.html"), 404


app.secret_key = "e8cb784d05b6"  # Secret key generated by `date | sha256sum | head -c 12`
